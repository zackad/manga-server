name: Test

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.1', '8.2', '8.3']
            fail-fast: false
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    tools: php-cs-fixer:3
                    extensions: pcov, :xdebug
            -   name: Setup NodeJS
                uses: actions/setup-node@v3
                with:
                    node-version: 18
                    cache: 'yarn'
            -   name: Get composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
            -   name: Cache composer dependencies
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    # Use composer.json for key, if composer.lock is not committed.
                    # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-
            -   name: Install Composer dependencies
                run: |
                    composer install --no-progress --prefer-dist --optimize-autoloader
            -   name: Install npm dependencies
                run: yarn install
            -   name: Lint code style
                run: |
                    bin/console lint:twig
                    php-cs-fixer fix --dry-run --diff
            -   name: Static Analysis
                run: |
                    vendor/bin/phpstan
            -   name: Build frontend artifact
                run: |
                    yarn build
            -   name: Run Tests
                run: php bin/phpunit --coverage-clover var/coverage.xml
            -   name: Upload coverage to Codecov
                if: ${{ matrix.php-versions == '8.3' }}
                uses: codecov/codecov-action@v3
                with:
                    files: ./var/coverage.xml
                    token: ${{ secrets.CODECOV_TOKEN }}
